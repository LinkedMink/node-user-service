{"openapi":"3.0.3","info":{"title":"@linkedmink/node-user-service","description":"This service authenticates users against records in a MongoDB and issues JWT tokens with claims (permissions) embedded in them. It's designed to be used in a microservice architecture where claims are defined by associated services.","license":{"name":"MIT","url":"https://github.com/LinkedMink/node-user-service.git/blob/master/LICENSE"},"version":"0.12.1"},"paths":{"/account":{"get":{"description":"Get a user's profile","tags":["Account"],"security":[{"BearerAuth":[]}],"responses":{"200":{"description":"The user record matching the input token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountModelResponse"}}}},"404":{"$ref":"#/components/responses/404NotFound"}}},"put":{"description":"Update a user's account","tags":["Account"],"security":[{"BearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IAccountModel"}}}},"responses":{"200":{"description":"The newly created user record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"}}},"delete":{"description":"Delete a user's account","tags":["Account"],"security":[{"BearerAuth":[]}],"responses":{"200":{"$ref":"#/components/responses/200Null"}}}},"/authenticate":{"post":{"description":"Authenticate the user credentials and retrieve a token for subsequent request","tags":["Authenticate"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IAuthenticateRequest"}}}},"responses":{"200":{"description":"The authentication token for the specified user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BearerTokenResponse"}}}},"400":{"$ref":"#/components/responses/400BadRequest"}}}},"/claims":{"get":{"description":"Get the details of a list of Claim","tags":["Claim"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/listPageSize"},{"$ref":"#/components/parameters/listPageNumber"},{"$ref":"#/components/parameters/listSort"},{"$ref":"#/components/parameters/listQuery"}],"responses":{"200":{"description":"The retrieved Claim list","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ClaimViewModelResponse"}}}}},"400":{"$ref":"#/components/responses/400BadRequest"}}},"post":{"description":"Save a new Claim","tags":["Claim"],"security":[{"BearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClaimModel"}}}},"responses":{"200":{"description":"The added Claim","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClaimViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"}}}},"/claims/{id}":{"get":{"description":"Get the details of a specific Claim","tags":["Claim"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"description":"The retrieved Claim","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClaimViewModelResponse"}}}},"404":{"$ref":"#/components/responses/404NotFound"}}},"put":{"description":"Update an existing Claim","tags":["Claim"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClaimModel"}}}},"responses":{"200":{"description":"The updated Claim","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClaimViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"},"404":{"$ref":"#/components/responses/404NotFound"}}},"delete":{"description":"Delete a specific Claim","tags":["Claim"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"$ref":"#/components/responses/200Null"},"404":{"$ref":"#/components/responses/404NotFound"}}}},"/":{"get":{"description":"Get a response to determine if the service is running","tags":["Health"],"responses":{"200":{"description":"The package name and version that's running this service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}},"/password/{email}":{"get":{"description":"Send a request to retrieve a temporary reset link","tags":["Password"],"parameters":[{"in":"path","name":"email","required":true,"schema":{"type":"string","format":"email"}}],"responses":{"200":{"$ref":"#/components/responses/200Null"},"400":{"$ref":"#/components/responses/400BadRequest"}}}},"/password":{"put":{"description":"Use the temporary reset key to change a user's password","tags":["Password"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IPasswordResetRequest"}}}},"responses":{"200":{"$ref":"#/components/responses/200Null"},"400":{"$ref":"#/components/responses/400BadRequest"}}}},"/register":{"post":{"description":"Register a new user","tags":["Register"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IRegisterRequest"}}}},"responses":{"200":{"description":"The newly created user record","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"}}}},"/register/{email}/{code}":{"get":{"description":"Verify the email address of the specified user","tags":["Register"],"parameters":[{"in":"path","name":"email","required":true,"schema":{"type":"string","format":"email"}},{"in":"path","name":"code","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/200Null"},"400":{"$ref":"#/components/responses/400BadRequest"}}}},"/register/{email}":{"get":{"description":"Send the verification email again","tags":["Register"],"parameters":[{"in":"path","name":"email","required":true,"schema":{"type":"string","format":"email"}}],"responses":{"200":{"$ref":"#/components/responses/200Null"}}}},"/settings":{"get":{"description":"Get the details of a list of Settings","tags":["Settings"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/listPageSize"},{"$ref":"#/components/parameters/listPageNumber"},{"$ref":"#/components/parameters/listSort"},{"$ref":"#/components/parameters/listQuery"}],"responses":{"200":{"description":"The retrieved Settings list","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/SettingViewModelResponse"}}}}},"400":{"$ref":"#/components/responses/400BadRequest"}}},"post":{"description":"Save a new Settings","tags":["Settings"],"security":[{"BearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ISettingsModel"}}}},"responses":{"200":{"description":"The added Settings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SettingViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"}}}},"/settings/{id}":{"get":{"description":"Get the details of a specific Settings","tags":["Settings"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"description":"The retrieved Settings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SettingViewModelResponse"}}}},"404":{"$ref":"#/components/responses/404NotFound"}}},"put":{"description":"Update an existing Settings","tags":["Settings"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ISettingsModel"}}}},"responses":{"200":{"description":"The updated Settings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SettingViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"},"404":{"$ref":"#/components/responses/404NotFound"}}},"delete":{"description":"Delete a specific Settings","tags":["Settings"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"$ref":"#/components/responses/200Null"},"404":{"$ref":"#/components/responses/404NotFound"}}}},"/users":{"get":{"description":"Get the details of a list of User","tags":["User"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/listPageSize"},{"$ref":"#/components/parameters/listPageNumber"},{"$ref":"#/components/parameters/listSort"},{"$ref":"#/components/parameters/listQuery"}],"responses":{"200":{"description":"The retrieved User list","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserViewModelResponse"}}}}},"400":{"$ref":"#/components/responses/400BadRequest"}}},"post":{"description":"Save a new User","tags":["User"],"security":[{"BearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModel"}}}},"responses":{"200":{"description":"The added User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"}}}},"/users/{id}":{"get":{"description":"Get the details of a specific User","tags":["User"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"description":"The retrieved User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModelResponse"}}}},"404":{"$ref":"#/components/responses/404NotFound"}}},"put":{"description":"Update an existing User","tags":["User"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModel"}}}},"responses":{"200":{"description":"The updated User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserViewModelResponse"}}}},"400":{"$ref":"#/components/responses/400ModelValidation"},"404":{"$ref":"#/components/responses/404NotFound"}}},"delete":{"description":"Delete a specific User","tags":["User"],"security":[{"BearerAuth":[]}],"parameters":[{"$ref":"#/components/parameters/ObjectId"}],"responses":{"200":{"$ref":"#/components/responses/200Null"},"404":{"$ref":"#/components/responses/404NotFound"}}}}},"components":{"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"parameters":{"ObjectId":{"in":"path","name":"id","required":true,"schema":{"type":"string","pattern":"[a-fA-F0-9]{24}"}},"listPageSize":[{"in":"query","name":"pageSize","required":false,"schema":{"type":"integer","format":"int32","minimum":1,"maximum":100}}],"listPageNumber":[{"in":"query","name":"pageNumber","required":false,"schema":{"type":"integer","format":"int32","minimum":0}}],"listSort":[{"in":"query","name":"sort","schema":{"type":"string"}}],"listQuery":[{"in":"query","name":"query","schema":{"type":"string"}}]},"schemas":{"ValidationErrors":{"type":"array","items":{"type":"object","properties":{"dataPath":{"type":"string"},"keyword":{"type":"string"},"message":{"type":"string"},"params":{"type":"object"},"schemaPath":{"type":"string"}}}},"IAccountModel":{"type":"object","properties":{"id":{"type":"string","pattern":"[a-fA-F0-9]{24}","readOnly":true},"email":{"type":"string","format":"email"},"password":{"type":"string","format":"password","minLength":8}}},"AccountModelResponse":{"$ref":"#/components/schemas/IAccountModel"},"IAuthenticateRequest":{"type":"object","properties":{"email":{"type":"string","format":"email"},"password":{"type":"string","format":"password"}},"required":["email","password"]},"IKeyAuthenticateRequest":{"type":"object","properties":{"username":{"type":"string"},"response":{"type":"string","format":"password"}},"required":["username"]},"AuthenticateRequest":{"oneOf":[{"$ref":"#/components/schemas/IAuthenticateRequest"},{"$ref":"#/components/schemas/IKeyAuthenticateRequest"}]},"IListRequest":{"type":"object","properties":{"pageSize":{"type":"integer","format":"int32","example":50},"pageNumber":{"type":"integer","format":"int32","example":0},"sort":{"type":"object","additionalProperties":{"type":"string","enum":["asc","dsc"]}},"query":{"type":"object","additionalProperties":{"type":"string"}}}},"IPasswordResetRequest":{"type":"object","properties":{"email":{"type":"string","format":"email"},"resetToken":{"type":"string"},"password":{"type":"string","format":"password","minLength":8}},"required":["email","resetToken","password"]},"IRegisterRequest":{"type":"object","properties":{"email":{"type":"string","format":"email"},"password":{"type":"string","format":"password","minLength":8}},"required":["email","password"]},"BearerToken":{"type":"object","properties":{"token":{"type":"string","description":"An encoded JWT token with the properties [JwtPayload](#model-JwtPayload) when decoded"}}},"BearerTokenResponse":{"$ref":"#/components/schemas/BearerToken"},"ClaimViewModel":{"type":"object","properties":{"name":{"type":"string","pattern":"[a-zA-Z0-9_-]+"},"applications":{"type":"array","items":{"type":"string","pattern":"[a-zA-Z0-9_-]+"}}},"required":["name","applications"]},"ClaimViewModelResponse":{"$ref":"#/components/schemas/ClaimViewModel"},"EditRecordViewModel":{"type":"object","properties":{"createdDate":{"type":"string","format":"date-time","readOnly":true},"createdBy":{"type":"string","readOnly":true},"createdByType":{"type":"string","readOnly":true},"modifiedDate":{"type":"string","format":"date-time","readOnly":true},"modifiedBy":{"type":"string","readOnly":true},"modifiedByType":{"type":"string","readOnly":true}}},"HealthResponse":{"type":"object","properties":{"mark":{"type":"integer","format":"int64","example":1591227886882},"application":{"type":"string","nullable":true,"example":"node-user-service"},"version":{"type":"string","nullable":true,"example":"0.9.7"}}},"JwtPayload":{"type":"object","properties":{"aud":{"type":"string"},"exp":{"type":"number"},"iat":{"type":"number"},"iss":{"type":"string"},"sub":{"type":"string"},"claims":{"type":"array","items":{"type":"string"}},"email":{"type":"string"},"publicKey":{"type":"string"}}},"MessageViewModel":{"type":"object","properties":{"message":{"type":"string"}}},"SettingViewModel":{"type":"object","properties":{"userId":{"type":"string","pattern":"[a-fA-F0-9]{24}"},"name":{"type":"string","pattern":"[a-zA-Z0-9_-]+"},"applications":{"type":"array","items":{"type":"string","pattern":"[a-zA-Z0-9_-]+"}},"data":{"type":"object"}},"required":["userId","name","applications","data"]},"SettingViewModelResponse":{"$ref":"#/components/schemas/SettingViewModel"},"UserEntityViewModel":{"type":"object","properties":{"userId":{"type":"string","pattern":"[a-fA-F0-9]{24}"}},"required":["userId"]},"UserViewModel":{"type":"object","properties":{"email":{"type":"string","format":"email"},"password":{"type":"string","format":"password"},"isEmailVerified":{"type":"boolean"},"isLocked":{"type":"boolean"},"isLockedDate":{"type":"string","format":"date-time"},"authenticationDates":{"type":"array","items":{"type":"string","format":"date-time"}},"claims":{"type":"array","items":{"type":"string","pattern":"[a-zA-Z0-9_-]+"}}},"required":["email","isEmailVerified","isLocked","claims"]},"UserViewModelResponse":{"$ref":"#/components/schemas/UserViewModel"}},"responses":{"400ModelValidation":{"description":"The supplied parameters are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrors"}}}},"404NotFound":{"description":"The requested item wasn't found"},"500Internal":{"description":"An unspecified error has occurred"},"400BadRequest":{"description":"The supplied parameters are invalid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrors"}}}},"401Auth":{"description":"The user could not be authenticated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageViewModel"}}}},"403Forbidden":{"description":"The supplied user does not have permission to perform this action","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MessageViewModel"}}}}}},"tags":[]}